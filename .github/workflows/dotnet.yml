# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Publish
      run: dotnet publish /p:PublishProfile=FolderProfile
    - name: Publish 2
      run: dotnet publish /p:PublishProfile=FolderProfile1
    - name: Zip RemoteRelay-Client-Win64 artifacts
      run: zip -r RemoteRelay-Client-Win64.zip ./RemoteRelay/bin/Release/net9.0/publish/win-x64
    - name: Zip RemoteRelay-Client-LinuxArm64 artifacts
      run: zip -r RemoteRelay-Client-LinuxArm64.zip ./RemoteRelay/bin/Release/net9.0/publish/linux-arm64
    - name: Zip RemoteRelay-Server-LinuxArm64 artifacts
      run: zip -r RemoteRelay-Server-LinuxArm64.zip ./RemoteRelay.Server/bin/Release/net9.0/publish
    - name: Upload RemoteRelay-Client-Win64 artifact
      uses: actions/upload-artifact@v4
      with:
        name: RemoteRelay-Client-Win64-artifacts
        path: RemoteRelay-Client-Win64.zip
    - name: Upload RemoteRelay-Client-LinuxArm64 artifact
      uses: actions/upload-artifact@v4
      with:
        name: RemoteRelay-Client-LinuxArm64-artifacts
        path: RemoteRelay-Client-LinuxArm64.zip
    - name: Upload RemoteRelay-Server-LinuxArm64 artifact
      uses: actions/upload-artifact@v4
      with:
        name: RemoteRelay-Server-LinuxArm64-artifacts
        path: RemoteRelay-Server-LinuxArm64.zip